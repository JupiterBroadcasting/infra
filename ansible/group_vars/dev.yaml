# grog.package
package_list:
  - name: bash-completion
  - name: curl
  - name: htop
  - name: ncdu
  - name: net-tools
  - name: nmap
  - name: sanoid
  - name: sudo
  - name: tmux
  - name: tree
  - name: wget
  - name: wireguard
  - name: zfsutils-linux

# geerlingguy.security
security_ssh_port: "{{ dev_ssh_port }}"
security_sudoers_passwordless:
  - "{{ main_username }}"

# geerlingguy.ntp
ntp_timezone: "America/New_York"

# geerlingguy.docker
docker_compose_version: 1.29.2

# geerlingguy.github_users
github_users_authorized_keys_exclusive: false
github_users:
  # You can specify an object with 'name' (required) and 'groups' (optional):
  - name: "{{ main_username }}"
    groups: sudo,docker

# ironicbadger.bash-aliases (formerly ferrarimarco.bash-aliases)
bash_aliases:
  - { alias: "dtail", command: "docker logs -tf --tail='50' " }
  - { alias: "dstop", command: "docker stop `docker ps -aq`" }
  - { alias: "drm", command: "docker rm `docker ps -aq`" }
  - { alias: "dcp", command: "docker-compose -f ~/docker-compose.yml " }
  - { alias: "dprune", command: "docker image prune" }
  - { alias: "dprunesys", command: "docker system prune --all" }
  - { alias: "dtop", command: "docker run --name ctop  -it --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop" }
  - { alias: "appdata", command: "cd /mnt/tank/appdata" }
  - { alias: "zspace", command: "zfs list -o space" }
  - { alias: "zsnap", command: "zfs list -t snapshot" }
  - { alias: "dfclean", command: "df -h -x tmpfs -t fuse.mergerfs -t xfs -t ext4 -t zfs"}

# ironicbadger.docker_compose_generator
global_env_vars:
  - "PUID={{ main_uid }}"
  - "PGID={{ main_gid }}"
  - "TZ={{ ntp_timezone }}"

appdata_path: "/home/{{ main_username }}/appdata"
#appdata_path_zfs: /tank/appdata

default_dns_ip: "{{ jb_dev_ip }}"
containers:
  - service_name: traefik
    active: true
    image: traefik
    container_name: tr
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    command:
      - --log.level=info
      - --accesslog=false
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=true
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - "--certificatesresolvers.cloudflare.acme.email={{ cloudflare_account_email }}"
      - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
      - --serversTransport.insecureSkipVerify=true
    volumes:
      - "{{ appdata_path }}/traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "CLOUDFLARE_EMAIL={{ cloudflare_account_email }}"
      - "CLOUDFLARE_API_KEY={{ cloudflare_api_key }}"
    restart: unless-stopped
###
  - service_name: jb-dev-test
    active: true
    image: nginx
    labels:
      - traefik.http.routers.devtest.rule=Host(`test.dev.jupiterbroadcasting.com`)
      - traefik.http.routers.devtest.entrypoints=websecure
      - traefik.http.routers.devtest.tls.certresolver=cloudflare
    #volumes:
      #- "{{ appdata_path }}/jb-dev-test/:/usr/share/nginx/html:ro" 
    restart: unless-stopped