# grog.package
package_list:
  - name: bash-completion
  - name: curl
  - name: htop
  - name: ncdu
  - name: net-tools
  - name: nmap
  - name: sudo
  - name: tmux
  - name: tree
  - name: wget
  - name: wireguard

# geerlingguy.security
security_ssh_port: "{{ demo_ssh_port }}"
security_sudoers_passworded:
  - "{{ main_username }}"

# geerlingguy.ntp
ntp_timezone: "America/New_York"

# geerlingguy.docker
# defaults are sane, no need to configure anything
# https://github.com/geerlingguy/ansible-role-docker/blob/master/defaults/main.yml

# geerlingguy.github_users

github_users_authorized_keys_exclusive: true
github_users:
  # You can specify an object with 'name' (required) and 'groups' (optional):
  - name: "{{ main_username }}"
    groups: sudo,docker

# ironicbadger.bash-aliases (formerly ferrarimarco.bash-aliases)
bash_aliases:
  - { alias: "dtail", command: "docker logs -tf --tail='50' " }
  - { alias: "dstop", command: "docker stop `docker ps -aq`" }
  - { alias: "drm", command: "docker rm `docker ps -aq`" }
  - { alias: "dcp", command: "docker-compose -f ~/docker-compose.yml " }
  - { alias: "dprune", command: "docker image prune" }
  - { alias: "dprunesys", command: "docker system prune --all" }
  - { alias: "dtop", command: "docker run --name ctop  -it --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop" }
  - { alias: "appdata", command: "cd /mnt/tank/appdata" }
  - { alias: "zspace", command: "zfs list -o space" }
  - { alias: "zsnap", command: "zfs list -t snapshot" }
  - { alias: "dfclean", command: "df -h -x tmpfs -x zfs -t fuse.mergerfs -t xfs -t ext4"}
  - { alias: "dfzfs", command: "df -h -x tmpfs -t fuse.mergerfs -t xfs -t ext4"}

# ironicbadger.docker_compose_generator
appdata_path: "/home/{{ main_username }}/appdata"
containers:
  - service_name: traefik
    active: true
    image: traefik
    container_name: tr
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    command:
      - --log.level=info
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - "--certificatesresolvers.cloudflare.acme.email={{ cloudflare_account_email }}"
      - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
    volumes:
      - "{{ appdata_path }}/traefik/letsencrypt:/letsencrypt"
      - "{{ appdata_path }}/traefik/etc:/etc/traefik"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "CLOUDFLARE_EMAIL={{ cloudflare_account_email }}"
      - "CLOUDFLARE_API_KEY={{ cloudflare_api_key }}"
    restart: unless-stopped
###  
  - service_name: lychee
    active: true
    image: lycheeorg/lychee:v4.0.6
    container_name: lychee
    volumes:
      - "{{ appdata_path }}/lychee/config:/config"
      - "{{ appdata_path }}/lychee/uploads:/uploads"
      - "{{ appdata_path }}/lychee/sym:/sym"
    environment:
      - PHP_TZ=America/New_York
      - DB_CONNECTION=mysql
      - DB_HOST=mysql_lychee
      - DB_PORT=3306
      - "DB_USERNAME={{ mysql_user_lychee }}"
      - "DB_DATABASE={{ mysql_database_lychee }}"
      - "DB_PASSWORD={{ mysql_password }}"
    labels:
      - traefik.enable=true
      - traefik.http.routers.lychee.rule=Host(`gallery.selfhosted.show`)
      - traefik.http.routers.lychee.entrypoints=websecure
      - traefik.http.routers.lychee.tls.certresolver=cloudflare
    depends_on:
      - mysql_lychee
    restart: unless-stopped
  - service_name: mysql_lychee
    active: true
    image: mariadb:10.5.5-focal
    container_name: mysql_lychee
    volumes:
      - "{{ appdata_path }}/mysql_lychee:/var/lib/mysql" 
    environment:
      - "MYSQL_ROOT_PASSWORD={{ mysql_root_password }}"
      - "MYSQL_PASSWORD={{ mysql_password }}"
      - "MYSQL_DATABASE={{ mysql_database_lychee }}"
      - "MYSQL_USER={{ mysql_user_lychee }}"
    include_global_env_vars: false
    restart: unless-stopped
###
  - service_name: nginx_halcyon
    active: true
    image: nginx
    labels:
      - traefik.enable=true
      - traefik.http.routers.halcyon.rule=Host(`halcyon.casa`)
      - traefik.http.routers.halcyon.entrypoints=websecure
      - traefik.http.routers.halcyon.tls.certresolver=cloudflare
    volumes:
      - "{{ appdata_path }}/halycon/web:/usr/share/nginx/html:ro" 
    restart: unless-stopped
###
  - service_name: nginx_wiki
    active: true
    image: nginx
    labels:
      - traefik.enable=true
      - traefik.http.routers.wiki.rule=Host(`wiki.selfhosted.show`)
      - traefik.http.routers.wiki.entrypoints=websecure
      - traefik.http.routers.wiki.tls.certresolver=cloudflare
    volumes:
      - "{{ appdata_path }}/wiki/site:/usr/share/nginx/html:ro" 
    restart: unless-stopped
###
  - service_name: nginx_pms_wiki
    active: true
    image: nginx
    labels:
      - traefik.enable=true
      - traefik.http.routers.pmswiki.rule=Host(`perfectmediaserver.com`)
      - traefik.http.routers.pmswiki.entrypoints=websecure
      - traefik.http.routers.pmswiki.tls.certresolver=cloudflare
    volumes:
      - "{{ appdata_path }}/pms-wiki/site:/usr/share/nginx/html:ro" 
    restart: unless-stopped
###
  - service_name: hedgedoc
    active: true
    image: quay.io/hedgedoc/hedgedoc:1.7.1
    volumes:
      - "{{ appdata_path }}/hedgedoc/app:/hedgedoc/public/uploads"
    environment:
      - "CMD_DB_URL=postgres://{{ hedgedoc_postgres_user }}:{{ hedgedoc_postgres_pass }}@hedgedoc_postgres:5432/{{ hedgedoc_postgres_db }}"
      - TZ=America/Seattle
    depends_on:
      - hedgedoc_postgres
    labels:
      - traefik.enable=true
      - "traefik.http.routers.hedgedoc.rule=Host(`{{ hedgedoc_url }}`)"
      - traefik.http.routers.hedgedoc.entrypoints=websecure
      - traefik.http.routers.hedgedoc.tls.certresolver=cloudflare
      - traefik.http.services.hedgedoc.loadbalancer.server.port=3000
    restart: unless-stopped
  - service_name: hedgedoc_postgres
    active: true
    image: postgres:9.6-alpine
    environment:
      - "POSTGRES_USER={{ hedgedoc_postgres_user }}"
      - "POSTGRES_PASSWORD={{ hedgedoc_postgres_pass }}"
      - "POSTGRES_DB={{ hedgedoc_postgres_db }}"
    volumes:
      - "{{ appdata_path }}/hedgedoc/db:/var/lib/postgresql/data"
    restart: unless-stopped
  ###
  - service_name: nginx_synology
    active: true
    image: nginx
    depends_on: 
      - traefik    
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginx.rule=Host(`synology.selfhosted.show`)
      - traefik.http.routers.nginx.entrypoints=websecure
      - traefik.http.routers.nginx.tls.certresolver=cloudflare
    volumes:
      - "{{ appdata_path }}/nginx_synology/web:/usr/share/nginx/html:ro" 
    restart: unless-stopped
  ###
  - service_name: exbin
    active: true
    image: m1dnight/exbin:latest
    environment:
      - DB_HOST=exbin_postgres
      - "TCP_PORT={{ exbin_tcp_port }}"
      - "TCP_IP={{ exbin_tcp_ip }}"
      - "PORT={{ exbin_http_port }}"
      - "DB_NAME={{ exbin_postgres_db }}"
      - "DB_PASS={{ exbin_postgres_pass }}"
      - "DB_USER={{ exbin_postgres_user }}"
      - "MAX_BYTES={{ exbin_max_bytes }}"
      - "EXTERNAL_URL={{ exbin_url }}"
      - DEFAULT_VIEW=reader
      - TZ=America/Seattle
    depends_on:
      - exbin_postgres
    labels:
      - traefik.enable=true
      - "traefik.http.routers.exbin.rule=Host(`{{ exbin_url }}`)"
      - traefik.http.routers.exbin.entrypoints=websecure
      - traefik.http.routers.exbin.tls.certresolver=cloudflare
      - "traefik.http.services.exbin.loadbalancer.server.port={{ exbin_http_port }}"
    restart: unless-stopped
  - service_name: exbin_postgres
    active: true
    image: postgres:10-alpine
    environment:
      - "POSTGRES_USER={{ exbin_postgres_user }}"
      - "POSTGRES_PASSWORD={{ exbin_postgres_pass }}"
      - "POSTGRES_DB={{ exbin_postgres_db }}"
    volumes:
      - "{{ appdata_path }}/exbin/db:/var/lib/postgresql/data"
    restart: unless-stopped

  # - service_name:
  #   active: true
  #   image:
  #   container_name: #optional - only required if diff to service_name
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.nginx.rule=Host(`foo.bar.com`)
  #     - traefik.http.routers.nginx.entrypoints=websecure
  #     - traefik.http.routers.nginx.tls.certresolver=cloudflare
  #     - traefik.http.services.nginx.loadbalancer.server.port=80
  #   volumes:
  #     - "{{ appdata_path }}/app:/config" 
  #   environment:
  #     -
  #   include_global_env_vars: #optional - defaults to false
  #   restart: unless-stopped


### not used atm
