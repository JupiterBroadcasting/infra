# grog.package
package_list:
  - name: bash-completion
  - name: curl
  - name: htop
  - name: ncdu
  - name: net-tools
  - name: nmap
  - name: sanoid
  - name: sudo
  - name: tmux
  - name: tree
  - name: wget
  - name: wireguard
  - name: zfsutils-linux

# geerlingguy.security
security_ssh_port: "{{ demo_ssh_port }}"
security_sudoers_passwordless:
  - "{{ main_username }}"

# geerlingguy.ntp
ntp_timezone: "America/New_York"

# geerlingguy.docker
docker_compose_version: 1.29.2

# geerlingguy.github_users
github_users_authorized_keys_exclusive: false
github_users:
  # You can specify an object with 'name' (required) and 'groups' (optional):
  - name: "{{ main_username }}"
    groups: sudo,docker

# sanoid
#sanoid_config_source: sanoid-morpheus.conf
syncoid_binary_path: /usr/sbin/syncoid
syncoid_status_dataset: "ironicbadger@status:tank/appdata"
syncoid_hc_url: "curl -fsS -m 10 --retry 5 -o /dev/null https://hc.ktz.cloud/ping"
syncoid_cron_jobs:
  ## cloud to morpheus
  - { job: '{{ syncoid_hc_url }}/{{ syncoid_hc_uuid_status }}/start && {{ syncoid_binary_path }} -r --skip-parent {{ syncoid_status_dataset }} tank/appdata && {{ syncoid_hc_url }}/{{ syncoid_hc_uuid_status }}/$? > /dev/null', name: 'status_replication', weekday: '*', hour: '*/6' }

# ironicbadger.bash-aliases (formerly ferrarimarco.bash-aliases)
bash_aliases:
  - { alias: "dtail", command: "docker logs -tf --tail='50' " }
  - { alias: "dstop", command: "docker stop `docker ps -aq`" }
  - { alias: "drm", command: "docker rm `docker ps -aq`" }
  - { alias: "dcp", command: "docker-compose -f ~/docker-compose.yml " }
  - { alias: "dprune", command: "docker image prune" }
  - { alias: "dprunesys", command: "docker system prune --all" }
  - { alias: "dtop", command: "docker run --name ctop  -it --rm -v /var/run/docker.sock:/var/run/docker.sock quay.io/vektorlab/ctop" }
  - { alias: "appdata", command: "cd /mnt/tank/appdata" }
  - { alias: "zspace", command: "zfs list -o space" }
  - { alias: "zsnap", command: "zfs list -t snapshot" }
  - { alias: "dfclean", command: "df -h -x tmpfs -t fuse.mergerfs -t xfs -t ext4 -t zfs"}

global_env_vars:
  - "PUID={{ main_uid }}"
  - "PGID={{ main_gid }}"
  - "TZ={{ ntp_timezone }}"

appdata_path: "/home/{{ main_username }}/appdata"
appdata_path_zfs: /tank/appdata

default_dns_ip: "{{ jb_core_ip }}"
containers:
  - service_name: traefik
    active: true
    image: traefik
    container_name: tr
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    command:
      - --log.level=info
      - --accesslog=false
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - "--certificatesresolvers.cloudflare.acme.email={{ cloudflare_account_email }}"
      - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
      - --serversTransport.insecureSkipVerify=true
    volumes:
      - "{{ appdata_path_zfs }}/traefik/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - "CLOUDFLARE_EMAIL={{ cloudflare_account_email }}"
      - "CLOUDFLARE_API_KEY={{ cloudflare_api_key }}"
    restart: unless-stopped
###  
  - service_name: jb-lychee
    active: true
    image: lycheeorg/lychee:v4.3.0
    volumes:
      - "{{ appdata_path_zfs }}/lychee/app/config:/config"
      - "{{ appdata_path_zfs }}/lychee/app/uploads:/uploads"
      - "{{ appdata_path_zfs }}/lychee/app/sym:/sym"
    environment:
      - PHP_TZ=America/New_York
      - DB_CONNECTION=mysql
      - DB_HOST=jb-lychee-db
      - DB_PORT=3306
      - "DB_USERNAME={{ mysql_user_lychee }}"
      - "DB_DATABASE={{ mysql_database_lychee }}"
      - "DB_PASSWORD={{ mysql_password }}"
    labels:
      - traefik.enable=true
      - traefik.http.routers.lychee.rule=Host(`gallery.selfhosted.show`)
      - traefik.http.routers.lychee.entrypoints=websecure
      - traefik.http.routers.lychee.tls.certresolver=cloudflare
    depends_on:
      - jb-lychee-db
    restart: unless-stopped
  - service_name: jb-lychee-db
    active: true
    image: mariadb:10.5.5-focal
    volumes:
      - "{{ appdata_path_zfs }}/lychee/db:/var/lib/mysql" 
    environment:
      - "MYSQL_ROOT_PASSWORD={{ mysql_root_password }}"
      - "MYSQL_PASSWORD={{ mysql_password }}"
      - "MYSQL_DATABASE={{ mysql_database_lychee }}"
      - "MYSQL_USER={{ mysql_user_lychee }}"
    include_global_env_vars: false
    restart: unless-stopped
###
  - service_name: jb-nginx-sshwiki
    active: true
    image: nginx
    labels:
      - traefik.enable=true
      - traefik.http.routers.sshwiki.rule=Host(`wiki.selfhosted.show`)
      - traefik.http.routers.sshwiki.entrypoints=websecure
      - traefik.http.routers.sshwiki.tls.certresolver=cloudflare
    volumes:
      - "{{ appdata_path_zfs }}/nginx_sshwiki/site:/usr/share/nginx/html:ro" 
    restart: unless-stopped
###
  - service_name: jb-nginx-shownotes
    active: true
    image: nginx
    labels:
      - traefik.enable=true
      - traefik.http.routers.jbshownotes.rule=Host(`notes.jupiterbroadcasting.com`)
      - traefik.http.routers.jbshownotes.entrypoints=websecure
      - traefik.http.routers.jbshownotes.tls.certresolver=cloudflare
    volumes:
      - "{{ appdata_path_zfs }}/nginx_shownotes/site:/usr/share/nginx/html:ro" 
    restart: unless-stopped
###
  - service_name: ktz-nginx-pmswiki
    active: true
    image: nginx
    labels:
      - traefik.enable=true
      - traefik.http.routers.pmswiki.rule=Host(`perfectmediaserver.com`)
      - traefik.http.routers.pmswiki.entrypoints=websecure
      - traefik.http.routers.pmswiki.tls.certresolver=cloudflare
    volumes:
      - "{{ appdata_path_zfs }}/nginx_pmswiki/site:/usr/share/nginx/html:ro" 
    restart: unless-stopped
###
  - service_name: jb-hedgedoc
    active: true
    image: quay.io/hedgedoc/hedgedoc:1.7.1
    volumes:
      - "{{ appdata_path_zfs }}/hedgedoc/app:/hedgedoc/public/uploads"
    environment:
      - "CMD_DB_URL=postgres://{{ hedgedoc_postgres_user }}:{{ hedgedoc_postgres_pass }}@jb-hedgedoc-postgres:5432/{{ hedgedoc_postgres_db }}"
      - TZ=America/Seattle
    depends_on:
      - jb-hedgedoc-postgres
    labels:
      - traefik.enable=true
      - "traefik.http.routers.hedgedoc.rule=Host(`{{ hedgedoc_url }}`)"
      - traefik.http.routers.hedgedoc.entrypoints=websecure
      - traefik.http.routers.hedgedoc.tls.certresolver=cloudflare
      - traefik.http.services.hedgedoc.loadbalancer.server.port=3000
    restart: unless-stopped
  - service_name: jb-hedgedoc-postgres
    active: true
    image: postgres:9.6-alpine
    environment:
      - "POSTGRES_USER={{ hedgedoc_postgres_user }}"
      - "POSTGRES_PASSWORD={{ hedgedoc_postgres_pass }}"
      - "POSTGRES_DB={{ hedgedoc_postgres_db }}"
    volumes:
      - "{{ appdata_path_zfs }}/hedgedoc/db:/var/lib/postgresql/data"
    restart: unless-stopped
  ###
  - service_name: jb-nginx-synology
    active: true
    image: nginx
    depends_on: 
      - traefik    
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginxsyno.rule=Host(`synology.selfhosted.show`)
      - traefik.http.routers.nginxsyno.entrypoints=websecure
      - traefik.http.routers.nginxsyno.tls.certresolver=cloudflare
    volumes:
      - "{{ appdata_path_zfs }}/nginx_synology/web:/usr/share/nginx/html:ro" 
    restart: unless-stopped
  ###
  - service_name: jb-exbin
    active: true
    image: m1dnight/exbin:0.0.7
    volumes:
      - "{{ appdata_path_zfs }}/exbin/config/jb-rocket.png:/app/priv/static/images/jb-rocket.png"
    environment:
      - DB_HOST=jb-exbin-postgres
      - "TCP_PORT={{ exbin_tcp_port }}"
      - "TCP_IP={{ exbin_tcp_ip }}"
      - "PORT={{ exbin_http_port }}"
      - "DB_NAME={{ exbin_postgres_db }}"
      - "DB_PASS={{ exbin_postgres_pass }}"
      - "DB_USER={{ exbin_postgres_user }}"
      - "MAX_BYTES={{ exbin_max_bytes }}"
      - "EXTERNAL_URL={{ exbin_url }}"
      - "ADMIN_PASSWORD={{ exbin_admin_password }}"
      - DEFAULT_VIEW=reader
      - BRAND=Jupiter Broadcasting
      - LOGO_FILENAME=jb-rocket.png
      - TZ=America/Seattle
    depends_on:
      - jb-exbin-postgres
    labels:
      - traefik.enable=true
      - "traefik.http.routers.exbin.rule=Host(`{{ exbin_url }}`)"
      - traefik.http.routers.exbin.entrypoints=websecure
      - traefik.http.routers.exbin.tls.certresolver=cloudflare
      - "traefik.http.services.exbin.loadbalancer.server.port={{ exbin_http_port }}"
    restart: unless-stopped
  - service_name: jb-exbin-postgres
    active: true
    image: postgres:10-alpine
    environment:
      - "POSTGRES_USER={{ exbin_postgres_user }}"
      - "POSTGRES_PASSWORD={{ exbin_postgres_pass }}"
      - "POSTGRES_DB={{ exbin_postgres_db }}"
    volumes:
      - "{{ appdata_path_zfs }}/exbin/db:/var/lib/postgresql/data"
    restart: unless-stopped
###
  - service_name: ktz-unifi
    active: true
    image: linuxserver/unifi-controller
    labels:
      - traefik.enable=true
      - "traefik.http.routers.ubiq.rule=Host(`{{ cloud_url_ubiq }}`)"
      - traefik.http.routers.ubiq.entrypoints=websecure
      - traefik.http.routers.ubiq.tls=true
      - traefik.http.routers.ubiq.tls.certresolver=cloudflare
      - traefik.http.services.ubiq.loadbalancer.server.scheme=https
      - traefik.http.services.ubiq.loadbalancer.server.port=8443
    ports:
      - "{{ cloud_unifi_port_advertise }}:{{ cloud_unifi_port_advertise_int }}"
      - 3478:3478/udp
    mem_limit: 1g
    volumes:
      - "{{ appdata_path_zfs }}/ktz-unifi:/config"
    include_global_env_vars: true
    restart: unless-stopped
###
  - service_name: ktz-blog
    active: true
    image: ghost:4-alpine
    labels:
      - traefik.enable=true
      - "traefik.http.routers.ktzblog.rule=Host(`{{ cloud_url_ktz_blog }}`)"
      - traefik.http.routers.ktzblog.entrypoints=websecure
      - traefik.http.routers.ktzblog.tls.certresolver=cloudflare
      - "traefik.http.routers.ktzblog-rss.rule=Host(`{{ cloud_url_ktz_blog }}`) && PathPrefix(`/rss`)"
      - traefik.http.routers.ktzblog-rss.entrypoints=websecure
      - traefik.http.routers.ktzblog-rss.tls.certresolver=cloudflare
      - traefik.http.routers.ktzblog-rss.middlewares=rss-cache-control
      - traefik.http.middlewares.rss-cache-control.headers.customresponseheaders.Cache-Control=public, max-age=600
    environment:
      - NODE_ENV=production
      - "url=https://{{ cloud_url_ktz_blog }}"
    volumes:
      - "{{ appdata_path_zfs }}/ktz-blog:/var/lib/ghost/content"
    restart: unless-stopped
###
  - service_name: ktz-blog-mum
    active: true
    image: ghost:4-alpine
    labels:
      - traefik.enable=true
      - "traefik.http.routers.mumblog.rule=Host(`{{ cloud_url_mum_blog }}`)"
      - traefik.http.routers.mumblog.entrypoints=websecure
      - traefik.http.routers.mumblog.tls.certresolver=cloudflare
    environment:
      - NODE_ENV=production
      - "url=https://{{ cloud_url_mum_blog }}"
    volumes:
      - "{{ appdata_path_zfs }}/ktz-blog-mum:/var/lib/ghost/content"
    restart: unless-stopped
  ###
  - service_name: ktz-pastebin
    active: true
    image: mkaczanowski/pastebin
    command: 
      - --address 
      - 0.0.0.0 
      - --db 
      - /var/lib/pastebin/ 
      - --uri 
      - "https://paste.{{ domain_cloud }}"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.ktzpaste.rule=Host(`paste.{{ domain_cloud }}`)"
      - traefik.http.routers.ktzpaste.entrypoints=websecure
      - traefik.http.routers.ktzpaste.tls.certresolver=cloudflare
      - traefik.http.services.ktzpaste.loadbalancer.server.port=8000
    volumes:
      - "{{ appdata_path_zfs }}/ktz_pastebin:/var/lib/pastebin"
    restart: unless-stopped
  ###
  - service_name: ktz-lychee
    active: true
    image: lycheeorg/lychee:v4.3.0
    volumes:
      - "{{ appdata_path_zfs }}/ktz_lychee/app/config:/config"
      - "{{ appdata_path_zfs }}/ktz_lychee/app/uploads:/uploads"
      - "{{ appdata_path_zfs }}/ktz_lychee/app/sym:/sym"
    environment:
      - PHP_TZ=America/New_York
      - DB_CONNECTION=mysql
      - DB_HOST=ktz-lychee-db
      - DB_PORT=3306
      - "DB_USERNAME={{ mysql_user_lychee }}"
      - "DB_DATABASE={{ mysql_database_lychee }}"
      - "DB_PASSWORD={{ mysql_password }}"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.ktzlychee.rule=Host(`images.{{ domain_cloud }}`)"
      - traefik.http.routers.ktzlychee.tls.certresolver=cloudflare
    depends_on:
      - ktz-lychee-db
    restart: unless-stopped
  - service_name: ktz-lychee-db
    active: true
    image: mariadb:10.5.5-focal
    volumes:
      - "{{ appdata_path_zfs }}/ktz_lychee/db:/var/lib/mysql" 
    environment:
      - "MYSQL_ROOT_PASSWORD={{ mysql_root_password }}"
      - "MYSQL_PASSWORD={{ mysql_password }}"
      - "MYSQL_DATABASE={{ mysql_database_lychee }}"
      - "MYSQL_USER={{ mysql_user_lychee }}"
    include_global_env_vars: false
    restart: unless-stopped
  ###
  - service_name: ktz-gitea
    active: true
    image: gitea/gitea
    environment:
      - "USER_UID={{ main_uid }}"
      - "USER_GID={{ main_gid }}"
      - "ROOT_URL=https://git.zetdemo.ktz.me"
      - "SSH_DOMAIN=git.zetdemo.ktz.me"
      - "APP_NAME=git.zetdemo.ktz.me"
      - "SSH_PORT=2222"
      - "DISABLE_REGISTRATION=false"
      - "REQUIRE_SIGNIN_VIEW=false"
    volumes:
      - "{{ appdata_path_zfs }}/ktz_gitea/gitea:/data"
    labels:
      - traefik.enable=true
      - traefik.http.routers.gitea.rule=Host(`git.zetdemo.ktz.me`)
      - traefik.http.routers.gitea.tls.certresolver=cloudflare
      - traefik.http.services.gitea.loadbalancer.server.port=3000
    ports:
      - 3000:3000
      - '"2222:2222"'
    restart: unless-stopped
  ###
  - service_name: ktz-drone
    active: true
    image: drone/drone:latest
    volumes:
      - "{{ appdata_path }}/ktz_drone:/data"
    environment:
      - "DRONE_GITEA_SERVER=https://git.zetdemo.ktz.me/"
      - DRONE_GIT_ALWAYS_AUTH=true
      - "DRONE_GITEA_CLIENT_ID={{ drone_gitea_client_id }}"
      - "DRONE_GITEA_CLIENT_SECRET={{ drone_gitea_client_secret }}"
      - "DRONE_SERVER_HOST=drone.zetdemo.ktz.me"
      - DRONE_SERVER_PROTO=https
      - DRONE_RPC_SECRET=super-duper-secret
      - "DRONE_USER_CREATE=username:{{ main_username }},admin:true"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.drone.rule=Host(`drone.zetdemo.ktz.me`)"
      - traefik.http.routers.drone.tls.certresolver=cloudflare
    ports:
      - "3001:80"
    restart: unless-stopped
  - service_name: ktz-drone-runner-docker
    active: true
    image: drone/drone-runner-docker:1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_PROTO=https
      - "DRONE_RPC_HOST=drone.zetdemo.ktz.me"
      - DRONE_RPC_SECRET=super-duper-secret
      - DRONE_RUNNER_CAPACITY=2
      - "DRONE_RUNNER_NAME=zetdemo"
    ports: 
      - 3002:3000
    depends_on:
      - ktz-drone
    restart: unless-stopped
  ###  
  - service_name: ktz-nginx-zetdemo-wiki
    active: true
    image: nginx
    labels:
      - traefik.enable=true
      - traefik.http.routers.zetdemowiki.rule=Host(`wiki.zetdemo.ktz.me`)
      - traefik.http.routers.zetdemowiki.tls.certresolver=cloudflare
    volumes:
      - "{{ appdata_path_zfs }}/nginx_zetdemowiki/site:/usr/share/nginx/html:ro" 
    restart: unless-stopped
  ###
  - service_name: librespeed
    active: true
    image: linuxserver/librespeed
    ports:
      - 8008:80
    labels:
      - traefik.enable=true
      - traefik.http.routers.librespeed.rule=Host(`speedtest.selfhosted.show`)
    environment:
      - MODE=standalone
      - TELEMETRY=true
      - "PASSWORD={{ librespeed_password }}"
    include_global_env_vars: true
    restart: unless-stopped
  ###
  - service_name: ktz-smtp
    active: true
    image: bytemark/smtp
    environment:
      - "RELAY_HOST={{ plausible_email_host }}"
      - RELAY_PORT=465
      - "RELAY_USERNAME={{ plausible_email_username }}"
      - "RELAY_PASSWORD={{ plausible_email_password }}"
    restart: unless-stopped
  - service_name: ktz-plausible-db
    active: true
    image: postgres:14
    volumes:
      - "{{ appdata_path_zfs }}/ktz_plausible/db:/var/lib/postgresql/data"
    environment:
      - "POSTGRES_PASSWORD={{ plausible_db_pass }}"
      - "POSTGRES_USER={{ plausible_db_user }}"
    restart: unless-stopped
  - service_name: ktz-plausible-events
    active: true
    image: yandex/clickhouse-server:21.12-alpine
    volumes:
      - "{{ appdata_path_zfs }}/ktz_plausible/clickhouse/events:/var/lib/clickhouse"
      - "{{ appdata_path_zfs }}/ktz_plausible/clickhouse/clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro"
      - "{{ appdata_path_zfs }}/ktz_plausible/clickhouse/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/logging.xml:ro"
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    tmpfs:
      - /var/log/clickhouse-server
    restart: unless-stopped
  - service_name: ktz-plausible
    active: true
    image: plausible/analytics:latest
    command: 
      - sh -c '/entrypoint.sh db migrate && /entrypoint.sh run'
    depends_on:
      - ktz-smtp
      - ktz-plausible-db
      - ktz-plausible-events
    environment:
      - "ADMIN_USER_EMAIL={{ plausible_admin_user_email }}"
      - "ADMIN_USER_NAME={{ plausible_admin_user_name }}"
      - "ADMIN_USER_PWD={{ plausible_admin_user_pass }}"
      - "BASE_URL={{ plausible_base_url }}"
      - "SECRET_KEY_BASE={{ plausible_secret_key_base }}"
      - "DATABASE_URL=postgres://{{ plausible_db_user }}:{{ plausible_db_pass }}@ktz-plausible-db:5432/plausible"
      - CLICKHOUSE_DATABASE_URL=http://ktz-plausible-events:8123/plausible
      - CRON_ENABLED=true
      - DISABLE_REGISTRATION=false
      #- SMTP_HOST_SSL_ENABLED=false
      - "SMTP_HOST_ADDR={{ plausible_email_host }}"
      - SMTP_HOST_PORT=465
      - "SMTP_USER_NAME={{ plausible_email_username }}"
      - "SMTP_USER_PWD={{ plausible_email_password }}"
    labels:
      - traefik.enable=true
      - "traefik.http.routers.plausible.rule=Host(`plausible.{{ domain_cloud }}`)"
      - traefik.http.routers.plausible.entrypoints=websecure
      - traefik.http.routers.plausible.tls.certresolver=cloudflare
      - traefik.http.services.plausible.loadbalancer.server.port=8000 
    restart: unless-stopped
###
  - service_name: jb-jbcom
    active: true
    image: jb-jbcom:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.jbcom.rule=Host(`dev.jupiterbroadcasting.com`)
      - traefik.http.routers.jbcom.entrypoints=websecure
      - traefik.http.routers.jbcom.tls.certresolver=cloudflare
      - traefik.http.services.jbcom.loadbalancer.server.port=80 
    #volumes:
    #  - "{{ appdata_path_zfs }}/jb-jupiterbroadcastingcom:/usr/share/nginx/html:ro" 
    restart: unless-stopped











  # - service_name:
  #   active: true
  #   image:
  #   container_name: #optional - only required if diff to service_name
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.nginx.rule=Host(`foo.bar.com`)
  #     - traefik.http.routers.nginx.entrypoints=websecure
  #     - traefik.http.routers.nginx.tls.certresolver=cloudflare
  #     - traefik.http.services.nginx.loadbalancer.server.port=80
  #   volumes:
  #     - "{{ appdata_path }}/app:/config" 
  #   environment:
  #     -
  #   include_global_env_vars: #optional - defaults to false
  #   restart: unless-stopped
